package com.huawei.g11n.tmr.address.fr;

import com.huawei.g11n.tmr.util.Regexs;

public class ReguExp extends Regexs {
    private static String bigLetter = "[A-ZÀÁÂÄÇÈÉÊËÌÎÏÚÛÜÙÒÓÔÖQÔ]";
    private static String blank = "(?:\\s*-\\s*|\\s*,\\s*|\\s+)";
    private static String blank1 = "(?:\\s+)";
    private static String blank2 = "(?:-|\\s+)";
    private static String boundL = "(?:(?<![a-zA-ZāáâàōóòöôêëéèīíîìïûūúùǖǘǜüÀÁÂÄÇÈÉÊËÌÎÏÚÛÜÙÒÓÔœŒÖç0-9&_@()'’-]))";
    private static String letter = "[a-zA-ZāáâàōóòöôêëéèīíîìïûūúùǖǘǜüÀÁÂÄÇÈÉÊËÌÎÏÚÛÜÙÒÓÔœŒÖçQÔ]";
    private static String letterNum = "[a-zA-ZāáâàōóòöôêëéèīíîìïûūúùǖǘǜüÀÁÂÄÇÈÉÊËÌÎÏÚÛÜÙÒÓÔœŒÖçQÔ0-9]";
    private static String number = "(\\d{1,5}\\b)|(\\d{1,4}(\\s*-\\s*|\\s+)\\d{1,4})|(\\d{1,3}(\\s+et\\s+)\\d{1,3})|(L\\d{1,2})|(\\d{1,2}e)|(\\d{1,3}bis)";
    private static String pArt2 = "((((?i)la|Les|le)\\s)+(?i)|l'|l’)";
    private static String pBui = null;
    public static final String pBui1 = "((?i)Aéroport|Aeroporto|Champs-Elysees|Champs-Élysées|Club|carrés|Ecole|Exportations|Galeries|Galeries nationales|Gare|Garden|Institue|Institut|Jardin|Maternelle|Mosquee|Mosquée|Monument|Marché|Notre-Dame|Notre Dame|Pont|Parc|Park|Poste|Place|Quai|Station|Square|Studio|Université|Apartment|Aabbaye|Auberge|Basilique|Banque|Bibliothèque|Building|Boutique|Bar|Cathedrale|Cathédrale|Chapelle|Cafétéria|Château|Chateau|Cirque|Cafe|Café|Eglise|Gymnase|Hotel|Hôtel|Hôpital|Hopital|Hypermarché|Librairie|Maternelle|Musee|Musée|Mohegan|Magasin|Museum|Opéra|Opera|Palais|Palace|Restaurant|Residence|Supérette|Supermarché|Stade|Théâtre|Theater|Theatre|Taverne|Usine|Compagnie|Entreprise|Laverie)\\b";
    public static final String pBuiCity;
    private static String pBuiStrCity = null;
    private static String pBuiStrPos = null;
    private static String pCity = "(?:(?i)Amiens|Arras|Alençon|Auxerre|Angers|Annecy|Angoulême|Agen|Auch|Albi|Aurillac|Avignon|Ajaccio|Bobigny|Belfort|Bar-le-Duc|Bourges|Beauvais|Besançon|Blois|Bordeaux|Bourg-en-Bresse|Bastia|Basse-Terre|Créteil|Cayenne|Colmar|Chaumont|Chartres|Châteauroux|Châlons-en-Champagne|Charleville-Mézières|Caen|Cahors|Chambéry|Clerment-Ferrand|Carcassonne|Dijon|Digne|Evry|Évreux|Épinal|Guéret|Grenoble|Gap|Foix|Fort-de-France|Laon|Lille|Laval|Le Mans|La Roche-sur-Yon|Lons-le-Saunier|La Rochelle|Limoges|Lyon|Le Puy|Melun|Metz|Macon|Montauban|Mende|Nanterre|Mont-de-Marsan|Moulins|Montpellier|Marseille|Nancy|Nevers|Nîmes|Nimes|Nice|Nantes|Niort|Orléans|Ouville|Paris|Pontoise|Poitiers|Pau|Privas|Perpignan|Pamiers|Quimper|Rouen|Rennes|Rodez|Saint-Lô|Saint-Brieuc|Strasbourg|Saint-Étienne|Saint-Denis|Tours|Troyes|Toulon|Toulouse|Tarbes|Tulle|Versailles|Vesoul|Vannes|Valence)";
    private static String pPos = null;
    private static String pPos1 = "\\b\\d{5}\\b|\\(?:\\d{5}\\)";
    public static final String pPosCity;
    private static String pPre1 = "(?:(?:(?i)aux|àux|à|au|àu|en|pour|de|des|du|d'|d’|dans)\\s+|d'|D’|D'|d’)";
    private static String pPre2 = "(?:aux|à|au|de|du|dans|devant|des)";
    private static String pPre3 = "(?:(?:(?i)de|des|du|D'|D’)\\s+|d'|D’|D'|d’)";
    private static String pPreAll = "(?:(?:(?i)aux|àux|à|au|àu|en|dans|pour|par|chez|vers|sous|entre|devant|sur|avant|contre|derrière|près de|hors de|du|de|des|at|in|on)\\s+|d'|D’|D'|d’)";
    public static final String pSpe = "(?:(?:(?i)la|Les|le)\\s+(?i)|l'|l’|\\s*,\\s*|\\s*-\\s*)\\s*(.*)";
    private static String pStr = null;
    public static final String pStr1 = "(?:(?i)Avenue|Ave|chaussée|chemin de fer|chemin|route|rue|Street|voie|bd|boulevard)";
    public static final String pStrCity;
    private static String pStrPos;
    public static final String reg2;
    public static final String reg2_noBui1;
    public static final String reg2_noPos;
    private static String reg2_noStr1 = pBuiCity;
    private static String word;
    private static String wordSmall;

    static {
        StringBuilder stringBuilder = new StringBuilder("(?:");
        stringBuilder.append(letterNum);
        stringBuilder.append("*");
        stringBuilder.append(")");
        wordSmall = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(bigLetter));
        stringBuilder.append(letter);
        stringBuilder.append("*");
        stringBuilder.append("(");
        stringBuilder.append(blank);
        stringBuilder.append("France");
        stringBuilder.append(")?");
        word = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(boundL));
        stringBuilder.append("(");
        stringBuilder.append(pArt2);
        stringBuilder.append(")");
        stringBuilder.append("?");
        stringBuilder.append(pBui1);
        stringBuilder.append(blank1);
        stringBuilder.append("(");
        stringBuilder.append("((?i)de|des)");
        stringBuilder.append(blank1);
        stringBuilder.append(pArt2);
        stringBuilder.append(word);
        stringBuilder.append("(?:");
        stringBuilder.append("(?:-|\\s+)");
        stringBuilder.append(word);
        stringBuilder.append(")");
        stringBuilder.append("{0,5}");
        stringBuilder.append("(?:\\s+\\(CT\\))");
        stringBuilder.append("?");
        stringBuilder.append("|");
        stringBuilder.append(pPre3);
        stringBuilder.append("(");
        stringBuilder.append(word);
        stringBuilder.append(")");
        stringBuilder.append("(?:");
        stringBuilder.append("(?:-|\\s+)");
        stringBuilder.append(word);
        stringBuilder.append(")");
        stringBuilder.append("{0,5}");
        stringBuilder.append("(?:\\s+\\(CT\\))");
        stringBuilder.append("?");
        stringBuilder.append("(");
        stringBuilder.append(blank1);
        stringBuilder.append(pPre3);
        stringBuilder.append(word);
        stringBuilder.append("(?:");
        stringBuilder.append(blank2);
        stringBuilder.append(word);
        stringBuilder.append(")");
        stringBuilder.append("{0,4}");
        stringBuilder.append(")");
        stringBuilder.append("?");
        stringBuilder.append("|");
        stringBuilder.append(word);
        stringBuilder.append("(?:");
        stringBuilder.append("(?:-|\\s+)");
        stringBuilder.append(word);
        stringBuilder.append(")");
        stringBuilder.append("{0,5}");
        stringBuilder.append("(?:\\s+\\(CT\\))");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("(?:(-)");
        stringBuilder.append("(?:");
        stringBuilder.append(letter);
        stringBuilder.append("*");
        stringBuilder.append("-");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})");
        stringBuilder.append("?");
        stringBuilder.append("((\\s+(et|st)\\s+)");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3})");
        stringBuilder.append("?");
        pBui = stringBuilder.toString();
        stringBuilder = new StringBuilder("\\b((");
        stringBuilder.append(number);
        stringBuilder.append(")");
        stringBuilder.append(")?");
        stringBuilder.append("(");
        stringBuilder.append("(\\s*|\\s*,\\s*|\\s*，\\s*)");
        stringBuilder.append(pStr1);
        stringBuilder.append(blank1);
        stringBuilder.append(pPreAll);
        stringBuilder.append(pArt2);
        stringBuilder.append(pStr1);
        stringBuilder.append(blank1);
        stringBuilder.append(pPre3);
        stringBuilder.append("?");
        stringBuilder.append(pArt2);
        stringBuilder.append("?");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("(");
        stringBuilder.append("\\s+");
        stringBuilder.append("et\\s+");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s*-\\s*|\\s+)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3})");
        stringBuilder.append("?");
        stringBuilder.append("(/");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s*-\\s*|\\s+)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})?");
        stringBuilder.append("|");
        stringBuilder.append("((\\s+)");
        stringBuilder.append("(bis\\s+))?");
        stringBuilder.append("(\\s*|\\s*,\\s*|\\s*，\\s*)");
        stringBuilder.append(pStr1);
        stringBuilder.append(blank1);
        stringBuilder.append("((?i)(de|des))");
        stringBuilder.append(blank1);
        stringBuilder.append(pArt2);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("(/");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s*-\\s*|\\s+)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})?");
        stringBuilder.append("|");
        stringBuilder.append("(\\s*|\\s*,\\s*|\\s*，\\s*)");
        stringBuilder.append(pStr1);
        stringBuilder.append(blank1);
        stringBuilder.append(pPre3);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("(");
        stringBuilder.append("\\s+");
        stringBuilder.append(pPre3);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3})");
        stringBuilder.append("?");
        stringBuilder.append("(/");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s*-\\s*|\\s+)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})?");
        stringBuilder.append("|");
        stringBuilder.append("(\\s*|\\s*,\\s*|\\s*，\\s*)");
        stringBuilder.append(pStr1);
        stringBuilder.append(blank1);
        stringBuilder.append(pPre3);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("(");
        stringBuilder.append("\\s+");
        stringBuilder.append(pPre3);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3})");
        stringBuilder.append("?");
        stringBuilder.append("(/");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s*-\\s*|\\s+)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})?");
        stringBuilder.append("|");
        stringBuilder.append("((\\s+)");
        stringBuilder.append("(bis\\s+))?");
        stringBuilder.append("(\\s*|\\s*,\\s*|\\s*，\\s*)");
        stringBuilder.append(pStr1);
        stringBuilder.append(blank1);
        stringBuilder.append(pPre3);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("(/");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s*-\\s*|\\s+)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})?");
        stringBuilder.append("|");
        stringBuilder.append("(\\s*|\\s*,\\s*|\\s*，\\s*)");
        stringBuilder.append(pStr1);
        stringBuilder.append(blank1);
        stringBuilder.append(pPre3);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("(/");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s*-\\s*|\\s+)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})?");
        stringBuilder.append("|");
        stringBuilder.append("((\\s+)");
        stringBuilder.append("(bis)");
        stringBuilder.append("(\\s+))?");
        stringBuilder.append("(\\s*|\\s*,\\s*|\\s*，\\s*)");
        stringBuilder.append(pStr1);
        stringBuilder.append(blank1);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,4}");
        stringBuilder.append("(");
        stringBuilder.append("\\s+");
        stringBuilder.append(pPre3);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3})");
        stringBuilder.append("?");
        stringBuilder.append("(/");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s*-\\s*|\\s+)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})?");
        stringBuilder.append(")");
        pStr = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(boundL));
        stringBuilder.append("((");
        stringBuilder.append(pBui);
        stringBuilder.append("(");
        stringBuilder.append("(\\s+|\\s*,\\s*)");
        stringBuilder.append(pPre1);
        stringBuilder.append("(#)?");
        stringBuilder.append("(((?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s+|-|\\s*-#\\s*)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{0,2}");
        stringBuilder.append("(");
        stringBuilder.append(word);
        stringBuilder.append("))");
        stringBuilder.append("|");
        stringBuilder.append("(\\(.*\\))");
        stringBuilder.append(")");
        stringBuilder.append("(\\s+(\\(.*\\)))?");
        stringBuilder.append("(\\s*-\\s*)");
        stringBuilder.append("(");
        stringBuilder.append(pPos1);
        stringBuilder.append(")");
        stringBuilder.append("(\\s+)");
        stringBuilder.append("(?:");
        stringBuilder.append(pPre1);
        stringBuilder.append(")");
        stringBuilder.append("?");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,4}");
        stringBuilder.append("|");
        stringBuilder.append("(\\s+|\\s*,\\s*|/)");
        stringBuilder.append("(");
        stringBuilder.append(pPre1);
        stringBuilder.append(")?");
        stringBuilder.append("(#)?");
        stringBuilder.append("(((?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s+|-|\\s*-#\\s*)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{0,2}");
        stringBuilder.append("(");
        stringBuilder.append(word);
        stringBuilder.append("))");
        stringBuilder.append("|");
        stringBuilder.append("(\\(.*\\))");
        stringBuilder.append("|");
        stringBuilder.append("(");
        stringBuilder.append("(\\s*-\\s*)");
        stringBuilder.append(pPre2);
        stringBuilder.append("(\\s+)");
        stringBuilder.append("(?:");
        stringBuilder.append(wordSmall);
        stringBuilder.append("(-)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3})");
        stringBuilder.append(")");
        stringBuilder.append("))");
        stringBuilder.append("|");
        stringBuilder.append(pBui);
        stringBuilder.append("((\\s+|\\s*,\\s*|/)");
        stringBuilder.append("(");
        stringBuilder.append(pPre1);
        stringBuilder.append(")?");
        stringBuilder.append("(");
        stringBuilder.append(pArt2);
        stringBuilder.append(")?");
        stringBuilder.append("(#)?");
        stringBuilder.append("(((?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{0,2}");
        stringBuilder.append("(");
        stringBuilder.append(word);
        stringBuilder.append("))");
        stringBuilder.append("|");
        stringBuilder.append("(\\(.*\\))");
        stringBuilder.append("|");
        stringBuilder.append("(");
        stringBuilder.append("(\\s*-\\s*)");
        stringBuilder.append(pPre2);
        stringBuilder.append("(\\s+)");
        stringBuilder.append("(?:");
        stringBuilder.append(wordSmall);
        stringBuilder.append("(-)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3})");
        stringBuilder.append(")");
        stringBuilder.append("(");
        stringBuilder.append(blank1);
        stringBuilder.append(pPre1);
        stringBuilder.append(word);
        stringBuilder.append(")?)?");
        stringBuilder.append(")");
        pBuiCity = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(boundL));
        stringBuilder.append("\\(\\d{5}\\)");
        pPos = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(boundL));
        stringBuilder.append("(");
        stringBuilder.append("[A-ZÀÁÂÄÇÈÉÊËÌÎÏÚÛÜÙÒÓÔÖQ](?:(?!- |:| #).)+\\s+[a-zA-ZāáâàōóòöôêëéèīíîìïûūúùǖǘǜüÀÁÂÄÇÈÉÊËÌÎÏÚÛÜÙÒÓÔœŒÖçQ0-9]+\\s+\\([0-9]{5}\\)");
        stringBuilder.append("|");
        stringBuilder.append("[A-ZÀÁÂÄÇÈÉÊËÌÎÏÚÛÜÙÒÓÔÖQ](?:(?!- |:| #).)+\\s+\\([0-9]{5}\\)");
        stringBuilder.append("|");
        stringBuilder.append(pCity);
        stringBuilder.append("(\\s+)");
        stringBuilder.append(pPos);
        stringBuilder.append(")");
        pPosCity = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(boundL));
        stringBuilder.append("((");
        stringBuilder.append(pStr);
        stringBuilder.append("(");
        stringBuilder.append("(?:\\s+|\\s*,\\s*)");
        stringBuilder.append(pPre1);
        stringBuilder.append("#?");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(-)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{0,2}");
        stringBuilder.append(word);
        stringBuilder.append("(?:");
        stringBuilder.append(wordSmall);
        stringBuilder.append("(-)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("|");
        stringBuilder.append("(\\s+)");
        stringBuilder.append(pPreAll);
        stringBuilder.append(pArt2);
        stringBuilder.append("(\\d{1,2}+ème)");
        stringBuilder.append("))");
        stringBuilder.append("|");
        stringBuilder.append(pStr);
        stringBuilder.append("((?:\\s+|\\s*,\\s*)");
        stringBuilder.append("(?:");
        stringBuilder.append(pPre1);
        stringBuilder.append(")?");
        stringBuilder.append("#?");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s+|-)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{0,2}");
        stringBuilder.append(word);
        stringBuilder.append("(?:");
        stringBuilder.append(wordSmall);
        stringBuilder.append("(-)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3})?");
        stringBuilder.append(")");
        pStrCity = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(boundL));
        stringBuilder.append("(");
        stringBuilder.append("(");
        stringBuilder.append(pStr);
        stringBuilder.append(")");
        stringBuilder.append(blank1);
        stringBuilder.append("BP");
        stringBuilder.append(blank1);
        stringBuilder.append("(");
        stringBuilder.append(pPos1);
        stringBuilder.append(")");
        stringBuilder.append(blank1);
        stringBuilder.append("PO");
        stringBuilder.append(blank1);
        stringBuilder.append("(");
        stringBuilder.append(pPos1);
        stringBuilder.append(")");
        stringBuilder.append(blank1);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("|");
        stringBuilder.append("(");
        stringBuilder.append(pStr);
        stringBuilder.append(")");
        stringBuilder.append(blank1);
        stringBuilder.append("BP");
        stringBuilder.append(blank1);
        stringBuilder.append("(");
        stringBuilder.append(pPos1);
        stringBuilder.append(")");
        stringBuilder.append(blank1);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append(blank);
        stringBuilder.append("PO");
        stringBuilder.append(blank1);
        stringBuilder.append("(");
        stringBuilder.append(pPos1);
        stringBuilder.append(")");
        stringBuilder.append(blank1);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2}");
        stringBuilder.append(blank1);
        stringBuilder.append("\\d{1,3}");
        stringBuilder.append(blank1);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2}");
        stringBuilder.append("|");
        stringBuilder.append("(");
        stringBuilder.append(pArt2);
        stringBuilder.append(")");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2}");
        stringBuilder.append(blank1);
        stringBuilder.append("(");
        stringBuilder.append(pPos1);
        stringBuilder.append(")");
        stringBuilder.append(blank1);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("|");
        stringBuilder.append("(");
        stringBuilder.append(pStr);
        stringBuilder.append(")");
        stringBuilder.append("(\\s+|\\s*-\\s*)");
        stringBuilder.append("(");
        stringBuilder.append(pPos1);
        stringBuilder.append(")");
        stringBuilder.append("(\\s+|\\s*-\\s*)");
        stringBuilder.append("(?:(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})");
        stringBuilder.append("?");
        stringBuilder.append("((?:\\s+)");
        stringBuilder.append("\\b\\d{1,2}");
        stringBuilder.append("(?:\\s+)");
        stringBuilder.append("(?:eme|ème)");
        stringBuilder.append("(?:\\s+)");
        stringBuilder.append("(?:étage))");
        stringBuilder.append("|");
        stringBuilder.append("(");
        stringBuilder.append(pStr);
        stringBuilder.append(")");
        stringBuilder.append("(\\s+|\\s*-\\s*|\\s*,\\s*)");
        stringBuilder.append("(");
        stringBuilder.append(pPos1);
        stringBuilder.append(")");
        stringBuilder.append("(?:(\\s+|\\s*-\\s*)");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s+|-)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,3}");
        stringBuilder.append("(\\s*");
        stringBuilder.append(pPre2);
        stringBuilder.append("\\s+(");
        stringBuilder.append(word);
        stringBuilder.append("\\s*");
        stringBuilder.append("){1,3}");
        stringBuilder.append(")?");
        stringBuilder.append(")");
        stringBuilder.append("?");
        stringBuilder.append(")");
        pStrPos = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(boundL));
        stringBuilder.append("(?:");
        stringBuilder.append(pBui);
        stringBuilder.append(")");
        stringBuilder.append("(");
        stringBuilder.append("(");
        stringBuilder.append("(?:\\s+|\\s*,\\s*)");
        stringBuilder.append("(");
        stringBuilder.append(pStr);
        stringBuilder.append(")");
        stringBuilder.append("(?:\\s+|\\s*,\\s*)");
        stringBuilder.append(pPre1);
        stringBuilder.append("?");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2}");
        stringBuilder.append(")");
        stringBuilder.append("|");
        stringBuilder.append("(?:\\s+|\\s*,\\s*)");
        stringBuilder.append("(?:");
        stringBuilder.append(pStr);
        stringBuilder.append(")");
        stringBuilder.append("(?:\\s+|\\s*-\\s*)");
        stringBuilder.append("(?:");
        stringBuilder.append("(?:");
        stringBuilder.append(pPos1);
        stringBuilder.append(")");
        stringBuilder.append("(?:\\s+)");
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append("(\\s+)");
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})");
        stringBuilder.append("|");
        stringBuilder.append("(?:\\s+|\\s*,\\s*|\\s*-\\s*)");
        stringBuilder.append("(?:");
        stringBuilder.append(pStr);
        stringBuilder.append(")");
        stringBuilder.append(")");
        pBuiStrCity = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(boundL));
        stringBuilder.append(pBui);
        stringBuilder.append("(?:\\s+|\\s*,\\s*)");
        stringBuilder.append("(");
        stringBuilder.append(pStr);
        stringBuilder.append(")");
        stringBuilder.append(blank1);
        stringBuilder.append("(");
        stringBuilder.append(pPos1);
        stringBuilder.append(")(");
        stringBuilder.append(blank1);
        stringBuilder.append("(?:");
        stringBuilder.append(word);
        stringBuilder.append(blank2);
        stringBuilder.append("?");
        stringBuilder.append(")");
        stringBuilder.append("{1,2})");
        pBuiStrPos = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(pBuiCity));
        stringBuilder.append("|");
        stringBuilder.append(pBuiStrPos);
        stringBuilder.append("|");
        stringBuilder.append(pBuiStrCity);
        stringBuilder.append("|");
        stringBuilder.append(pStrPos);
        stringBuilder.append("|");
        stringBuilder.append(pStrCity);
        reg2 = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(pStrPos));
        stringBuilder.append("|");
        stringBuilder.append(pStrCity);
        reg2_noBui1 = stringBuilder.toString();
        stringBuilder = new StringBuilder(String.valueOf(pBuiStrCity));
        stringBuilder.append("|");
        stringBuilder.append(pBuiCity);
        stringBuilder.append("|");
        stringBuilder.append(pStrCity);
        reg2_noPos = stringBuilder.toString();
    }

    public void init() {
        put("pBui1", pBui1);
        put("pStr1", pStr1);
        put("reg2", reg2);
        put("reg2_noPos", reg2_noPos);
        put("reg2_noStr1", reg2_noStr1);
        put("pBuiCity", pBuiCity);
        put("reg2_noBui1", reg2_noBui1);
        put("pStrCity", pStrCity);
        put("pPosCity", pPosCity);
        put("pSpe", pSpe);
        put("mPos1", "[0-9]{5}");
        put("pNumber", number);
        put("pBuiStrPos", pBuiStrPos);
        put("pBuiStrCity", pBuiStrCity);
        put("pStrPos", pStrPos);
        put("cat", "(\\s*,\\s*|\\s*)");
    }
}
